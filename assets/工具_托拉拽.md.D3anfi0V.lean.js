import{_ as y,s as r,o as v,c as u,j as c,F as C,E as x,a1 as I,P as S,e as T,n as w,I as _}from"./chunks/framework.Dvw3FbWD.js";const M={setup(){const g=["square","circle","triangle","line"],t=r([]),p=r(null),n=r(null),f=(e,l)=>{p.value=l,e.dataTransfer.setData("text/plain",l)},m=e=>{e.preventDefault()},a=e=>{if(p.value){const l=e.clientX-e.target.getBoundingClientRect().left,o=e.clientY-e.target.getBoundingClientRect().top;t.value.push({type:p.value,left:l,top:o,zIndex:t.value.length})}},s=(e,l)=>{n.value=l,e.dataTransfer.setData("text/plain","shape")},d=(e,l)=>{if(n.value!==null&&n.value!==l){const o=t.value.splice(n.value,1)[0];t.value.splice(l,0,o),n.value=null}},i=r(!1),D=r(0),h=r(0),k=r(null);return{shapes:g,canvasItems:t,startDrag:f,allowDrop:m,drop:a,startDragShape:s,dropShape:d,showContextMenu:e=>{D.value=e.clientX,h.value=e.clientY,i.value=!0;const l=e.target.querySelectorAll(".canvas-shape");for(let o=l.length-1;o>=0;o--)if(l[o]===e.target){k.value=o;break}},bringToFront:e=>{if(e!==null&&e<t.value.length-1){const[l]=t.value.splice(e,1);t.value.push(l),i.value=!1}},sendToBack:e=>{if(e!==null&&e>0){const[l]=t.value.splice(e,1);t.value.unshift(l),i.value=!1}},moveUp:e=>{e!==null&&e<t.value.length-1&&([t.value[e],t.value[e+1]]=[t.value[e+1],t.value[e]],i.value=!1)},moveDown:e=>{e!==null&&e>0&&([t.value[e],t.value[e-1]]=[t.value[e-1],t.value[e]],i.value=!1)},selectTopShape:e=>{const l=e.target.querySelectorAll(".canvas-shape");for(let o=l.length-1;o>=0;o--)if(l[o]===e.target){console.log("Selected shape index:",o);break}},showMenu:i,contextMenuX:D,contextMenuY:h,selectedIndex:k}}},b={class:"container"},B={class:"sidebar"},z=["onDragstart"],F=["onDragstart","onDrop"];function N(g,t,p,n,f,m){return v(),u("div",b,[c("div",B,[(v(!0),u(C,null,x(n.shapes,a=>(v(),u("div",{key:a,class:"shape-icon",draggable:"true",onDragstart:s=>n.startDrag(s,a)},[c("div",{class:w(`icon-${a}`)},null,2)],40,z))),128))]),c("div",{class:"canvas",onDragover:t[1]||(t[1]=a=>n.allowDrop(a)),onDrop:t[2]||(t[2]=a=>n.drop(a)),onContextmenu:t[3]||(t[3]=I(a=>n.showContextMenu(a),["prevent"])),onClick:t[4]||(t[4]=a=>n.selectTopShape(a))},[(v(!0),u(C,null,x(n.canvasItems,(a,s)=>(v(),u("div",{key:s,class:w(["canvas-shape",`shape-${a.type}`]),style:S({left:a.left+"px",top:a.top+"px",zIndex:a.zIndex}),draggable:"true",onDragstart:d=>n.startDragShape(d,s),onDragover:t[0]||(t[0]=I(()=>{},["prevent"])),onDrop:d=>n.dropShape(d,s)},null,46,F))),128))],32),n.showMenu?(v(),u("div",{key:0,class:"context-menu",style:S({left:n.contextMenuX+"px",top:n.contextMenuY+"px"})},[c("div",{onClick:t[5]||(t[5]=a=>n.bringToFront(n.selectedIndex))},"置顶"),c("div",{onClick:t[6]||(t[6]=a=>n.sendToBack(n.selectedIndex))},"置底"),c("div",{onClick:t[7]||(t[7]=a=>n.moveUp(n.selectedIndex))},"上移一层"),c("div",{onClick:t[8]||(t[8]=a=>n.moveDown(n.selectedIndex))},"下移一层")],4)):T("",!0)])}const X=y(M,[["render",N]]),O=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"工具/托拉拽.md","filePath":"工具/托拉拽.md"}'),Y={name:"工具/托拉拽.md"},R=Object.assign(Y,{setup(g){return(t,p)=>(v(),u("div",null,[_(X)]))}});export{O as __pageData,R as default};
